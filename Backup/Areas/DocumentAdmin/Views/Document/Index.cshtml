@model IEnumerable<QML.Web.UI.Areas.DocumentAdmin.Models.DocumentsFileModel>
@{
    ViewBag.Title = "QUẢN LÝ TÀI LIỆU";    
}
<script type="text/javascript" src="@Url.Content("~/Content/jquery_alert/jquery.alerts.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.cookie.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.treeview.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/demo.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/demo.js")"></script>
<h2>
    Danh sách tài liệu</h2>
<script type="text/javascript">
    $(function () {
        $("#toggleAllCheckBox").click(function () {
            if ($(this).attr("value") == "Chọn tất cả") {
                $(".check-box").attr("checked", true);
                $(this).attr("value", "Bỏ chọn")

            } else {
                $(".check-box").attr("checked", false);
                $(this).attr("value", "Chọn tất cả")
            }
        });

        $("#Cataloging").click(function () {
            /*if ($("#assignChkBx:checked").length > 1) {
            jAlert('Thao tác này không thực hiện cho nhiều bản ghi cùng một lúc', 'Thông báo');
            }
            else if ($("#assignChkBx:checked").length < 1) {
            jAlert('Bạn cần phải chọn một biểu ghi để thực hiện biên mục', 'Thông báo');
            }
            else {*/
            $("#actionControl").val("cataloging");
            var allVals = [];
            $("#assignChkBx:checked").each(function () {
                allVals.push($(this).val());
            });
            $('#listID').val(allVals)
            $("#manageLogin").submit();
            //    }

        });

        $("#Thumbnail").click(function () {
            if ($("#assignChkBx:checked").length > 1) {
                jAlert('Thao tác này không thực hiện cho nhiều bản ghi cùng một lúc', 'Thông báo');
            }
            else if ($("#assignChkBx:checked").length < 1) {
                jAlert('Bạn cần phải chọn một biểu ghi để thực hiện cập nhật ảnh đại diện', 'Thông báo');
            }
            else {
                $("#actionControl").val("thumbnail");
                var allVals = [];
                $("#assignChkBx:checked").each(function () {
                    allVals.push($(this).val());
                });
                $('#listID').val(allVals)
                $("#manageLogin").submit();
            }

        });

        $("#MoveCate").click(function () {
            if ($("#assignChkBx:checked").length < 1) {
                jAlert('Bạn cần phải chọn ít nhất một biểu ghi để thực hiện chuyển chuyên mục', 'Thông báo');
            }
            else {
                $("#actionControl").val("moveCate");
                var allVals = [];
                $("#assignChkBx:checked").each(function () {
                    allVals.push($(this).val());
                });
                $('#listID').val(allVals)
                $("#manageLogin").submit();
            }

        });

        $("#SetFee").click(function () {
            if ($("#assignChkBx:checked").length > 1) {
                jAlert('Thao tác này không thực hiện cho nhiều bản ghi cùng một lúc', 'Thông báo');
            }
            else if ($("#assignChkBx:checked").length < 1) {
                jAlert('Bạn cần phải chọn một biểu ghi để thực hiện thiết lập phí xem cho tài liệu', 'Thông báo');
            }
            else {
                $("#actionControl").val("setFee");
                var allVals = [];
                $("#assignChkBx:checked").each(function () {
                    allVals.push($(this).val());
                });
                $('#listID').val(allVals)
                $("#manageLogin").submit();
            }

        });

        $("#SetStatus").click(function () {
            if ($("#assignChkBx:checked").length < 1) {
                jAlert('Bạn cần phải chọn một biểu ghi để thiết lập trạng thái tài liệu', 'Thông báo');
            }
            else {
                $("#actionControl").val("setStatus");
                var allVals = [];
                $("#assignChkBx:checked").each(function () {
                    allVals.push($(this).val());
                });
                $('#listID').val(allVals)
                $("#manageLogin").submit();
            }

        });

        $("#DeleteCurent").click(function () {
            if ($("#assignChkBx:checked").length < 1) {
                jAlert('Bạn cần phải chọn một biểu ghi để thực hiện thao tác xóa', 'Thông báo');
            }
            else {
                var answer = confirm("Bạn có chắc chắn muốn xóa (những) bản ghi được chọn ?")
                if (answer) {
                    $("#actionControl").val("deleteCurrent");
                    var allVals = [];
                    $("#assignChkBx:checked").each(function () {
                        allVals.push($(this).val());
                    });
                    $('#listID').val(allVals)
                    $("#manageLogin").submit();
                }
            }
        });

        $("#DeletePermanent").click(function () {
            if ($("#assignChkBx:checked").length < 1) {
                jAlert('Bạn cần phải chọn một biểu ghi để thực hiện thao tác xóa hẳn file', 'Thông báo');
            }
            else {
                var answer = confirm("Bạn có chắc chắn muốn xóa vĩnh viễn (những) bản ghi được chọn ?")
                if (answer) {
                    $("#actionControl").val("deletePermanent");
                    var allVals = [];
                    $("#assignChkBx:checked").each(function () {
                        allVals.push($(this).val());
                    });
                    $('#listID').val(allVals)
                    $("#manageLogin").submit();
                }
            }
        });

        $("#Filter").click(function () {
            if ($("#AttributeFilter").val() != "none") {
                $("#FilterForm").submit();
            }
            else {
                jAlert('Hãy chọn thuộc tính cần lọc', 'Thông báo');
            }
        });

        $("#UploadSWF").click(function () {
            if ($("#assignChkBx:checked").length < 1) {
                jAlert('Bạn cần phải chọn một biểu ghi để tải file SWF', 'Thông báo');
            }
            else {
                $("#actionControl").val("uploadSWF");
                var allVals = [];
                $("#assignChkBx:checked").each(function () {
                    allVals.push($(this).val());
                });
                $('#listID').val(allVals)
                $("#manageLogin").submit();
            }
        });

        $("#AttributeValue").hide();
        $("#AttributeValue1").hide();

        $("#AttributeFilter").change(function () {
            //on-change code goes in here.
            //variable "this" references the state dropdown element
            var atr = $("#AttributeFilter").val();
            if (atr == "Catalogue") {
                $('#AttributeValue').find('option').remove();
                $('#AttributeValue').append('<option value="cataloged">Đã biên mục</option>');
                $('#AttributeValue').append('<option value="notcataloged">Chưa biên mục</option>');
                $("#AttributeValue").show();
            }
            else if (atr == "Status") {
                $('#AttributeValue').find('option').remove();
                $('#AttributeValue').append('<option value="public">Hiển thị</option>');
                $('#AttributeValue').append('<option value="unpublic">Không hiển thị</option>');
                $('#AttributeValue').append('<option value="private">Mật</option>');
                $("#AttributeValue").show();
            }
            else if (atr == "keyword") {
                $('#AttributeValue').find('option').remove();
                $('#AttributeValue').append('<option value="0" selected=selected>Tất cả</option>');
                $('#AttributeValue').append('<option value="1">Nhan đề</option>');
                $('#AttributeValue').append(' <option value="2">Tác giả</option>');
                $('#AttributeValue').append('<option value="3">Chủ đề</option>');
                $('#AttributeValue').append('<option value="4">Tác giả phụ</option>');
                $('#AttributeValue').append('<option value="5">Năm xuất bản</option>');
                $('#AttributeValue').append('<option value="6">Loại tài liệu</option>');
                $('#AttributeValue').append('<option value="7">Mô tả vật lý</option>');
                $('#AttributeValue').append('<option value="8">Định danh</option>');
                $('#AttributeValue').append('<option value="9">Liên kết</option>');
                $('#AttributeValue').append('<option value="10">Nguồn</option>');
                $('#AttributeValue').append('<option value="11">Ngôn ngữ</option>');
                $('#AttributeValue').append('<option value="12">Bản quyền</option>');
                $('#AttributeValue').append('<option value="13">Tóm tắt</option>');
                $('#AttributeValue').append('<option value="14">Nhà xuất bản</option>');
                $('#AttributeValue').append('<option value="15">Địa chỉ lưu trữ</option>');
                $("#AttributeValue").show();
                $("#AttributeValue1").show();
            }
            else {
                $('#AttributeValue').find('option').remove();
                $('#AttributeValue').append('<option value="fee">Thu phí</option>');
                $('#AttributeValue').append('<option value="free">Miễn phí</option>');

                $("#AttributeValue").show();
            }



        });

    });
</script>
<table width="100%" class="datatable" border="0">
    <tr>
        <td rowspan="3" valign="top">
            <span style="color: Green; font-weight: bold;">Bộ sưu tập</span><br />
            <br />
            <br />
            <ul id="browser" class="filetree">
                <li><span class="folder">@Html.ActionLink("Toàn bộ", "Index")</span>
                    <ul>
                        @MvcHtmlString.Create(ViewBag.tree_cate)
                    </ul>
                </li>
            </ul>
        </td>
        <td>
            @Html.ActionLink("Thêm mới", "Create", "Document", null, new { @class = "link-button-green" })
            &nbsp;&nbsp;|&nbsp;&nbsp;Chuyên mục: <b>@ViewBag.name_cate</b>&nbsp;&nbsp;@if (ViewContext.RouteData.GetRequiredString("action") == "Search")
                                                                                      { <span>|&nbsp;&nbsp;Kết quả tìm kiếm: (Từ khóa: <b>@ViewBag.keyword</b> - Theo: <b>@ViewBag.filter</b>)
                                                                                      </span> }
                                                                                      else
                                                                                      { <span>@MvcHtmlString.Create(ViewBag.header)</span> }
        </td>
    </tr>
    <tr>
        <td>
            @using (Html.BeginForm("Filter", "Document", FormMethod.Get, new { id = "FilterForm" }))
            {
                <select id="AttributeFilter" name="attribute">
                    <option value="none">Chọn thuộc tính</option>
                    <option value="Status">Trạng thái</option>
                    <option value="Catalogue">Biên mục</option>
                    <option value="Type">Loại tài liệu</option>
                    <option value="keyword">Từ khóa</option>
                </select>
                <select id="AttributeValue" name="value">
                </select>
                <input type="textbox" name="keyword" id="AttributeValue1" />
                <input type="hidden" name="id_cate" value="@ViewBag.id_cate" />                
                <input type="button" id="Filter" name="filter" value="Lọc" class="button" />
            }
            <br />
            @using (Html.BeginForm("Management", "Document", FormMethod.Post, new { id = "manageLogin" }))
            {
                <input type="button" id="toggleAllCheckBox" name="sbm" value="Chọn tất cả" class="button" />
                <input type="hidden" id="actionControl" name="actionName" />
                <input type="hidden" id="listID" name="idValue" />
                <input type="button" id="Cataloging" name="sbm" value="Biên mục" class="button" />
                <input type="button" id="Thumbnail" name="sbm" value="Ảnh đại diện" class="button" />
                <input type="button" id="alert_button" name="sbm" value="Miễn phí" class="button" />
                <input type="button" id="SetFee" name="sbm" value="Thu phí" class="button" />
                <input type="button" id="MoveCate" name="sbm" value="Chuyển chỗ" class="button" />
                <input type="button" id="SetStatus" name="sbm" value="Đổi trạng thái" class="button" />
                <input type="button" id="DeletePermanent" name="sbm" value="Xóa file" class="button" />
                <input type="button" id="DeleteCurent" name="sbm" value="Bỏ khỏi CSDL" class="button" />
                <input type="button" id="UploadSWF" name="sbm" value="Tải file SWF" class="button" />
            }
        </td>
    </tr>
    <tr>
        <td>
            @{

                var grid = new WebGrid(
                    source: Model.ToList(),
                    rowsPerPage: 10
                    );

            }
            @grid.GetHtml(
                     alternatingRowStyle: "alternative-row",
                                   mode: WebGridPagerModes.All,
                                   firstText: "<< First",
                      previousText: "< Previous", nextText: "Next >",
                      lastText: "Last >>",

                    tableStyle: "datatable",
                    columns: grid.Columns(
                        grid.Column(header: "Chọn", style: "labelcolumn", format: @<text><input class="check-box" id="assignChkBx" name="chkID" type="checkbox" value="@item.DocumentID" /></text>),
                                                                 grid.Column(header: "Tên tệp", format: @<text><img src="@Url.Content("~/uploads/" + @QML.Web.UI.Areas.DocumentAdmin.Helpers.DocumentsHelper.getFormatModel(item.FormatID).Avatar)" width="32px" height="32px" />@item.FileName</text>, style: "vertical-align:middle;"),
                                                                 grid.Column(header: "Kiểu tệp", format: @<text>@QML.Web.UI.Areas.DocumentAdmin.Helpers.DocumentsHelper.getFormatModel(item.FormatID).FileFormat</text>, style: "vertical-align:middle;"),
                                                                 grid.Column(header: "Loại tài liệu", format: @<text>@item.BookFee</text>, style: "vertical-align:middle;"),
                                                                                                                              grid.Column(header: "Avatar", format: @<text>
            @if (String.Compare(item.Thumbnail, "pdf.png") != 0 && String.Compare(item.Thumbnail, "avi.png") != 0 && String.Compare(item.Thumbnail, "mp3.png") != 0)
            {
                <text><input name="isHasInfo" type="checkbox" disabled="DISABLED" checked="true" /></text>
            }
            else
            {
                <text><input name="isHasInfo" type="checkbox" disabled="DISABLED" /></text>
            }
            </text>, style: "vertical-align:middle;"),
                                                                                                                             grid.Column(header: "Biên mục ?", format: @<text><input  name="isHasInfo" type="checkbox" disabled="DISABLED" @item.CheckHasInfo  /></text>, style: "vertical-align:middle;"),
                                                                                                                                                                                                                                                                                                                grid.Column(header: "Ngày nhập", format: @<text>@item.CreatedDate.ToString("dd/MM/yyyy")</text>, style: "vertical-align:middle;"),
                                                                                                                                                                                                                                                                                                                                                                         grid.Column(header: "Trạng thái", format: @<text>@item.Status</text>, style: "vertical-align:middle;")
                    ),
                    htmlAttributes: new { cellpadding = "0", cellspacing = "0", width = "100%" },
                    footerStyle: "pagination"
                )
        </td>
    </tr>
</table>
<script type="">
    $(function () {

    });
</script>
