@using QML.Web.UI.Helpers;
@model QML.Web.UI.ViewModels.HanuElibrary2012
<script type="text/javascript" src="@Url.Content("~/Content/Admin/js/jquery.tools.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/Admin/js/global.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>

<script>
    $(function () {
        @if (@TempData["alertMsg"] != null) {
            if (TempData["alertMsg"] == "1") {
                <text>alert("Mật khẩu cũ không đúng");</text>
            }
            else if (TempData["alertMsg"] == "0")
            {
                <text>alert("Thay đổi mật khẩu thành công");</text>
            }
        }
    });
</script>

@{
    ViewBag.Title = "Thay đổi mật khẩu - Hanoi University | E-Library";
}
<div id="common-wrapper">
    <div id="main-content">
        <section class="clearfix">
            <ul class="tabs">
                <li><a class="tab" href="#">@Html.Localize("Lịch sử truy cập tài liệu")</a></li>
                <li><a class="tab" href="#">@Html.Localize("Lịch sử nạp tiền")</a></li>
                <li><a class="tab" href="#">@Html.Localize("Tài liệu đã mua")</a></li>
                <li><a class="tab" href="#">@Html.Localize("Thông tin cá nhân")</a></li>
                <li><a class="tab" href="#">@Html.Localize("Đổi mật khẩu")</a></li>
            </ul>
            <div class="panes clearfix">
                <section>
                    <br />
                    <h2>Lịch sử truy cập tài liệu của bạn</h2>
                    
                    @{
                        var grid = new WebGrid(source: Model.ViewHistoryENum.ToList(), rowsPerPage: 20);
                    }

                    @using (Html.BeginForm("History", "Home", FormMethod.Get))
                    {
                        @grid.GetHtml(
                            tableStyle: "sortable",
                            columns: grid.Columns(
                                grid.Column(
                                    columnName: "DocumentTitle", 
                                    header: "Tiêu đề sách", 
                                    format: @<text> @Html.ActionLink(
										(string)FrontLayoutHelper.getDocumentTitle(item.BookId), 
										"ViewBook", 
										new { id = item.BookId }
									) </text>),
                                grid.Column(columnName: "ViewDate", header: "Ngày xem sách"),
                                grid.Column(columnName: "DocumentPublisher", header: "Nhà xuất bản"),
                                grid.Column(columnName: "Fee", header: "Phí xem tài liệu")
                            ),
                            htmlAttributes: 
                            new { id = "hoho", cellpadding = "0", cellspacing = "0", width = "100%" },
                            footerStyle: "pagination"
                        )
                    }
                </section>
                <!-- Lịch sử nạp tiền -->
                <section>
                    <br />
                    <h2>Lịch sử nạp tiền của bạn</h2>
                    @{
                        var grid1 = new WebGrid(source: Model._moneyLog.ToList(), rowsPerPage: 20);
                    }

                    @using (Html.BeginForm("MoneyLog", "Home", FormMethod.Get))
                    {
                        @grid1.GetHtml(
							tableStyle: "sortable",
							columns: grid1.Columns(
                                grid1.Column(
									columnName: "feeLog", 
									header: "Số tiền nạp", 
									format: @<text> @Html.Label((string)FrontLayoutHelper.convertToMoneyFromDouble(item.feeLog) + " VND")</text>),
                                grid1.Column(columnName: "dateInput", header: "Ngày nạp tiền")),
                            htmlAttributes: 
                            new { id = "moneyLog", cellpadding = "0", cellspacing = "0", width = "100%" },
                            footerStyle: "pagination"
                        )
                    }
                </section>
                <section>
                    <hr />
                    <h2>Tài liệu đã mua</h2>
                    @{
                        var grid2 = new WebGrid(source: Model.MostView.ToList(), rowsPerPage: 20);
                    }

                    @grid2.GetHtml(
                            columns: grid1.Columns(
                                grid2.Column(
                                    columnName: "DocumentTitle",
                                    header: "Tên tài liệu",
                                    format: @<text> @Html.ActionLink(
                                        (string)FrontLayoutHelper.getDocumentTitle(item.BookId),
                                        "ViewBook",
                                        new { id = item.BookId }
                                    ) </text>),
                                grid2.Column(columnName: "Fee", header: "Giá tiền")),
                                    htmlAttributes:
                                        new { id = "moneyLog", cellpadding = "0", cellspacing = "0", width = "100%" },
                                        footerStyle: "pagination"
                    )
                </section>
                <section>
                    <br />
                    <h2>Thông tin cá nhân</h2>
                    <table>
                        <thead>
                            <tr>
                                <td name="label">Tên học sinh</td>
                                <td>@Model.UserAuth.Username</td>
                            </tr>
                            <tr>
                                <td name="label">Mã số sinh viên</td>
                                <td>@Model.UserAuth.StudentID</td>
                            </tr>

                            <tr>
                                <td name="label">Lớp</td>
                                <td>@Model.UserAuth.StudentClass</td>
                            </tr>

                            <tr>
                                <td name="label">Thuộc khoa</td>
                                <td>@Model.UserAuth.Faculty</td>
                            </tr>

                        </thead>
                    </table>

                </section>
                <section>
                    <br />
                    <h2>Đổi mật khẩu</h2>
                    <center />
                    @using (Html.BeginForm())
                    {
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.UserAuth.UserId)
                        @Html.HiddenFor(model => model.UserAuth.Username)
                        @Html.HiddenFor(model => model.UserAuth.ApplicationId)
                        @Html.HiddenFor(model => model.UserAuth.CreatedDate)
                        @Html.HiddenFor(model => model.UserAuth.LastLoginDate)
                        @Html.HiddenFor(model => model.UserAuth.AuthToken)
                        @Html.HiddenFor(model => model.UserAuth.Faculty)
                        @Html.HiddenFor(model => model.UserAuth.StudentID)
                        @Html.HiddenFor(model => model.UserAuth.StudentClass)
                        @Html.HiddenFor(model => model.UserAuth.ActualName)
                        @Html.HiddenFor(model => model.UserAuth.DueDate)
                        @Html.HiddenFor(model => model.UserAuth.UserGroup)
                        @Html.HiddenFor(model => model.UserAuth.YearLearnt)

                        @Html.HiddenFor(model => model.UserAuth.auth_Roles)
                        @Html.HiddenFor(model => model.UserAuth.DocumentOrders)
                        @Html.HiddenFor(model => model.UserAuth.Profile.UserId)
                        @Html.HiddenFor(model => model.UserAuth.Profile.Status)
                        @Html.HiddenFor(model => model.UserAuth.Profile.LastModifiedUser)
                        @Html.HiddenFor(model => model.UserAuth.Profile.CreatedUser)
                        @Html.HiddenFor(model => model.UserAuth.Profile.Balance)
                        @Html.HiddenFor(model => model.UserAuth.Profile.CreatedDate)
                        @Html.HiddenFor(model => model.UserAuth.Profile.LastModifiedDate)
	     <!--Pass cũ(+) -->
                        <p class="oldPass">
                            @Html.LabelFor(model => model.UserAuth.Password, "Mật khẩu cũ")
                            @Html.TextBoxFor(model => model.UserAuth.Password, new { @Class = "text", @Type = "password", @Value = "", @Name = "OldPassword", @Required = "Required" })
                        </p>
        <!-- Pass mới -->
                        <p class="newPass">
                            @Html.LabelFor(model => model.UserAuth.Password, "Mật khẩu mới")
                            @Html.TextBoxFor(model => model.UserAuth.Password, new { @Class = "text", @Type = "password", @Value = "", @Minlength = "6", @Maxlength = "25", @Required = "Required", @id = "pass1" })
                        </p>
                        
                        <p>
                            @Html.Label("Nhập lại mật khẩu", new { @Class = "confirmPass" })
                            @Html.TextBox("confirmPass", "", new { @Class = "text", @Type = "password", @Value = "", @Minlength = "6", @Maxlength = "25", @Required = "Required", @id = "pass2" })
                        </p>
        <!-- Email mới -->
                        <p class="newEmail">
                            @Html.LabelFor(model => model.UserAuth.Profile.Email, "Email mới")
                            @Html.TextBoxFor(model => model.UserAuth.Profile.Email, new { @Class = "text", @Type = "email", @Value = "" })
                        </p>
            
                        <p>
                            <input name="submit" type="submit" value="Đổi thông tin cá nhân" />
                        </p>
                    }
                </section>

            </div>
        </section>
    </div>
    <!-- het #main-content-->
</div>
<style type="text/css">
    td[name="label"] {
        width: 480px !important;
        font-weight: bold;
    }

    .tabs {
        list-style: none;
        margin: 0 !important;
        padding: 0;
        height: 30px;
        border-bottom: 1px solid #aaa;
    }

        .tabs li {
            float: left;
            text-indent: 0;
            padding: 0;
            margin: 0 2px 0 0 !important;
            list-style-image: none !important;
            border-top: 1px solid #aaa;
            border-left: 1px solid #aaa;
            border-right: 1px solid #aaa;
            -webkit-border-top-left-radius: 4px;
            -webkit-border-top-right-radius: 4px;
            -khtml-border-top-left-radius: 4px;
            -khtml-border-top-right-radius: 4px;
            -moz-border-radius: 4px 4px 0 0;
            border-radius: 4px 4px 0 0;
        }

    a.tab {
        background: #ddd;
        background: -moz-linear-gradient(top, #eee, #ddd);
        background: -webkit-gradient(linear, left top, left bottom, from(#eee), to(#ddd));
        -pie-background: linear-gradient(top, #eee, #ddd);
        border-bottom: 1px solid #aaa;
        -webkit-border-top-left-radius: 3px;
        -webkit-border-top-right-radius: 3px;
        -moz-border-radius: 3px 3px 0 0;
        border-radius: 3px 3px 0 0;
        -moz-box-shadow: inset 0 1px 0 rgba(255,255,255,0.5);
        -webkit-box-shadow: inset 0 1px 0 rgba(255,255,255,0.5);
        box-shadow: inset 0 1px 0 rgba(255,255,255,0.5);
        font-size: 11px;
        display: block;
        height: 29px;
        line-height: 30px;
        width: 121px;
        text-align: center;
        text-decoration: none;
        color: #000;
        padding: 0px;
        margin: 0px;
        position: relative;
        text-shadow: 0 1px 0 #fff;
        top: 0px;
        -webkit-background-clip: padding-box;
    }

    .panes {
        border: 1px solid #aaa;
        border-top: 0;
        margin-top: -6px;
    }

    .clearfix:after {
        visibility: hidden;
        display: block;
        font-size: 0;
        content: " ";
        clear: both;
        height: 0;
    }

    .main-content > section {
        padding: 20px 30px;
        -moz-border-radius: 0 0 5px 5px;
        -webkit-border-bottom-left-radius: 5px;
        -webkit-border-bottom-right-radius: 5px;
        -khtml-border-radius: 0 0 5px 5px;
        border-radius: 0 0 5px 5px;
    }

    .tabs .current, .tabs .current:hover, .tabs li.current a.tab {
        border-bottom: 1px solid #fff;
        background: #fff;
        background: -webkit-gradient(linear, left top, left bottom, from(#e1e1e1), to(#fff));
        background: -moz-linear-gradient(top, #e1e1e1, #fff);
        -pie-background: linear-gradient(top, #e1e1e1, #fff);
        cursor: default !important;
        color: #000 !important;
        text-shadow: 0 1px 0 #fff;
    }

    .panes > section {
        margin: 5px 12px;
    }

    .apple_overlay {
        display: none;
    }

    .oldPass label[for="UserAuth_Password"] {
        margin-right: 49px;
    }

    .newPass label[for="UserAuth_Password"] {
        margin-right: 43px;
    }

    .confirmPass {
        margin-right: 20px;
    }

    .newEmail label[for="UserAuth_Profile_Email"] {
        margin-right: 65px;
    }

    #moneyLog td, #moneyLog th {
        text-align: center;
    }
</style>
<script>
    $(document).ready(function () {
        $("form").submit(function (event) {
            var pass = $("#pass1").val();
            var confirm = $("#pass2").val();

            if (pass != confirm) {
                alert("Xác nhận mật khẩu mới không khớp");
                event.preventDefault();
            }
        });
    });
</script>
